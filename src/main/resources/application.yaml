spring:
  application:
    name: spring-pgvector
  jpa:
    open-in-view: true
    show-sql: true
    hibernate:
      ddl-auto: create

#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://localhost:5436/spring-pgvector
#    username: postgres
#    password: pass1234

#  modulith:
#    events:
#      jdbc-schema-initialization:
#        enabled: true

  ai:
    ollama:
      init:
        pull-model-strategy: when_missing
        chat:
          include: false
      embedding:
        options:
#          model: gte-large
#          model: nomic-ai/nomic-embed-text-v1.5
          model: nomic-embed-text
#          model: Snowflake/snowflake-arctic-embed-m-v2.0
    vectorstore:
      pgvector:
#        initialize-schema: true
#        dimensions: 1024
        dimensions: 768
        index-type: hnsw
        schema-validation: false
#        remove-existing-vector-store-table: true

# IVFFlat (Inverted File Flat) index, HNSW (Hierarchical Navigable Small World) index
#spring.ai.vectorstore.pgvector.index-type=HNSW
#spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
# spring.ai.vectorstore.pgvector.dimensions=1024
# Optional: Controls how documents are batched for embedding
#spring.ai.vectorstore.pgvector.batching-strategy=TOKEN_COUNT
# Optional: Maximum number of documents per batch
#spring.ai.vectorstore.pgvector.max-document-batch-size=10000
logging:
  level:
    root: info
    com.oconeco: info
  pattern:
    console: "%d{MM-dd HH:mm:ss} %highlight(%-5level) [%-30logger{30}]  -- %msg%n"
